const mongoose = require('mongoose');
require('dotenv').config();

// Mod√®les
const User = require('./models/User');
const Class = require('./models/Class');

async function checkClassesData() {
  try {
    await mongoose.connect(process.env.MONGO_URI);
    console.log('‚úÖ Connect√© √† MongoDB');

    // V√©rifier les classes et leurs studentCount
    const classes = await Class.find();
    console.log(`üìö Nombre de classes trouv√©es: ${classes.length}`);

    for (const cls of classes) {
      console.log(`\nüè´ Classe: ${cls.name}`);
      console.log(`   - ID: ${cls._id}`);
      console.log(`   - Niveau: ${cls.level}`);
      console.log(`   - Capacit√©: ${cls.capacity}`);
      console.log(`   - StudentCount: ${cls.studentCount}`);
      console.log(`   - SchoolId: ${cls.schoolId}`);

      // Compter les √©tudiants r√©ellement assign√©s √† cette classe
      const actualStudents = await User.countDocuments({
        role: 'student',
        classId: cls._id
      });
      console.log(`   - √âtudiants r√©els dans la DB: ${actualStudents}`);

      if (cls.studentCount !== actualStudents) {
        console.log(`   ‚ö†Ô∏è  INCOH√âRENCE: studentCount=${cls.studentCount} vs r√©el=${actualStudents}`);
      } else {
        console.log(`   ‚úÖ Coh√©rent`);
      }
    }

    // V√©rifier l'utilisateur admin
    const admin = await User.findOne({ email: 'adminpeds@lespedagogues.com' });
    
    if (!admin) {
      console.error('‚ùå Utilisateur adminpeds@lespedagogues.com non trouv√©');
    } else {
      console.log('\nüë§ Utilisateur admin trouv√©:');
      console.log(`   - ID: ${admin._id}`);
      console.log(`   - Nom: ${admin.name}`);
      console.log(`   - Email: ${admin.email}`);
      console.log(`   - R√¥le: ${admin.role}`);
      console.log(`   - schoolId: ${admin.schoolId || 'ABSENT'}`);
    }  } catch (error) {
    console.error('‚ùå Erreur:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå D√©connexion de MongoDB');
  }
}

checkClassesData();